class Solution {
public:
  
    int countPairs(vector<int>& deliciousness) {
        unordered_map<int,int> lks;
        long long ans=0;
        for(int x : deliciousness){
            for(int i=1;i<=(1<<22);i*=2){
                if(lks.count(i-x)) ans+=lks[i-x];
            }
            lks[x]+=1;
        }
        return ans % (int)(1e9 + 7);
         /* bool isPowerOfTwo(int num) {
        return ((num & (num - 1)) == 0);
    }*/
       /*  int ct = 0;
        int n = deliciousness.size();
        int mod = (int)(1e9) + 7;
        
        for(int i = 0; i < n; i++) {
            for(int j = i + 1; j < n; j++) {
                int sum = deliciousness[i] + deliciousness[j];
                if(isPowerOfTwo(sum)) 
                    ct = (ct + 1) % mod;
            }    
        }
        
        return ct;*/
        
    }
};
