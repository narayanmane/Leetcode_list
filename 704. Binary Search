/*frist way*/
class Solution {
    public int search(int[] nums, int target) {
       
        int beg=0;
        int end=nums.length;
      int loc= bs(nums,beg,end,target);
        if(loc !=-1)
            return loc-1;
        else
            return -1;
        
        
    }
    
    public static int bs(int [] nums ,int beg,int end,int target )
    {
        int mid;
        if(end>=beg)
        {
            mid=(beg+end)/2;
            
            if(nums[mid]==target)
                return mid+1;
            else if(nums[mid]<target)
            {
                return bs(nums,mid+1,end,target);
            }
            
        
        else
        {
            return bs(nums,beg,mid-1,target);
        }
        }
        return -1;
    }
}

/*second way */

class Solution {
    public int search(int[] nums, int target) {
        if(nums.length==0) return -1;
        int left=0;
        int right=nums.length-1;
        while(left<=right)
        {
            int mid=left+(right-left)/2;
            if(nums[mid]==target)
                return mid;
            else if(nums[mid]>target)
            {
                right=mid-1;
            }
            else
            {
                left=mid+1;
            }
        }
        return -1;
        
    }
}
