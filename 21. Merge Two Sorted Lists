/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {
        ListNode dummy=new ListNode(0);
        ListNode curr=dummy;
        while(list1!=null && list2 !=null)
        {   /* compaire val of l1  and l2  l1< l2 then in l1 list and increase pointer*/
            if(list1.val<=list2.val)
            {
                curr.next=list1;
                list1=list1.next;
            }
            else
            {
                curr.next=list2;
                list2=list2.next;
            }
            curr=curr.next;
             }
        /* if l2 or to reach at end but one elements are remain then can append*/
        curr.next=list1 !=null?list1:list2;
        return dummy.next;
            
        
    }
}
