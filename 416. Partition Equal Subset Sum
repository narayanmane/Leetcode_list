class Solution 
{
public:
	    bool canPartition(vector<int>& nums) 
    {
        int n = nums.size();
        
        int sum = 0;
        
        for(int i = 0; i < n; i++)
        {
            sum += nums[i];
        }
		if (sum % 2 !=0) 
            return false;
		int S1 = sum/2;
		int dp[n+1][S1+1];
		for(int i=0;i<=n;i++)
        {
		  dp[i][0] = 1;
		}
		for(int i=0;i<=S1;i++)
        {
			dp[0][i] = 0;
		}
		for(int i=1;i<=n;i++)
        {
			for(int j=1;j<=S1;j++)
            {
				if(nums[i-1]<=j)
                {
					dp[i][j] =  dp[i-1][j-nums[i-1]] || dp[i-1][j];
				}
                else
                {
					dp[i][j] = dp[i-1][j];
				}
			}
		}
		return dp[n][S1] ;
	}
};
